---
- name: Create namespace if requested
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ opa_namespace }}"
        labels:
          kubernetes.io/metadata.name: "{{ opa_namespace }}"

- name: Create OPA Deployment
  kubernetes.core.k8s:
    state: present
    namespace: "{{ opa_namespace }}"
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: "{{ opa_name }}"
        namespace: "{{ opa_namespace }}"
        labels:
          app: "{{ opa_name }}"
      spec:
        replicas: "{{ replicas }}"
        selector:
          matchLabels:
            app: "{{ opa_name }}"
        template:
          metadata:
            labels:
              app: "{{ opa_name }}"
          spec:
            containers:
              - name: "{{ opa_name }}"
                image: "{{ opa_image }}"
                args:
                  - "run"
                  - "--server"
                  - "--addr=0.0.0.0:8181"
                ports:
                  - name: http
                    containerPort: 8181
                    protocol: TCP
                livenessProbe:
                  httpGet:
                    path: /health?plugins
                    port: 8181
                  initialDelaySeconds: 5
                  periodSeconds: 5
                readinessProbe:
                  httpGet:
                    path: /health?plugins
                    port: 8181
                  initialDelaySeconds: 5
                  periodSeconds: 5
                resources:
                  requests:
                    cpu: "{{ cpu_request }}"
                    memory: "{{ memory_request }}"
                  limits:
                    cpu: "{{ cpu_limit }}"
                    memory: "{{ memory_limit }}"
                terminationMessagePath: /dev/termination-log
                terminationMessagePolicy: File
                imagePullPolicy: Always
            restartPolicy: Always
            terminationGracePeriodSeconds: 30
            dnsPolicy: ClusterFirst
            securityContext: {}
            schedulerName: default-scheduler
