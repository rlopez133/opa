---
- name: Get OPA route URL
  kubernetes.core.k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: "{{ opa_name }}"
    namespace: "{{ namespace }}"
  register: opa_route

- name: Fail if OPA route is not found
  ansible.builtin.fail:
    msg: "OPA route '{{ opa_name }}' not found in namespace '{{ namespace }}'"
  when: opa_route.resources is not defined or opa_route.resources | length == 0

- name: Set OPA URL fact
  ansible.builtin.set_fact:
    opa_url: "https://{{ opa_route.resources[0].spec.host }}"

# Results get stored in temp_files results
- name: Create temp files for OPA policies
  ansible.builtin.tempfile:
    state: file
    suffix: .rego
  loop: "{{ opa_policies }}"
  loop_control:
    label: "{{ item.name }}"
  register: temp_files

# Looping over temp_files.results thus its item.item.name
# registered temp_files, so now:
# item = result from the temp file loop
# item.item = the policy you're processing
# item.path = the file created for that policy

- name: Download Rego files from GitHub into temp files
  ansible.builtin.get_url:
    url: "{{ item.item.url }}"
    dest: "{{ item.path }}"
  loop: "{{ temp_files.results }}"
  loop_control:
    label: "{{ item.item.name }}"


# Looping over temp_files.results thus its item.item.name
- name: Ensure old policy is removed
  ansible.builtin.uri:
    url: "{{ opa_url }}/v1/policies/{{ item.item.name }}"
    method: DELETE
    status_code: [200, 404]
    validate_certs: true
  loop: "{{ temp_files.results }}"
  loop_control:
    label: "{{ item.item.name }}"a

# Looping over temp_files.results thus its item.item.name
- name: Upload new Rego policy
  uri:
    url: "{{ opa_url }}/v1/policies/{{ item.item.name }}"
    method: PUT
    headers:
      Content-Type: text/plain
    body: "{{ lookup('file', item.path) }}"
    body_format: raw
    status_code: 200
  loop: "{{ temp_files.results }}"
  loop_control:
    label: "{{ item.item.name }}"

- name: Upload Rego policies to OPA
  ansible.builtin.uri:
    url: "{{ opa_url }}/v1/policies/{{ item.item.name }}"
    method: PUT
    headers:
      Content-Type: text/plain
    body: "{{ lookup('file', item.path) }}"
    body_format: raw
    status_code: 200
  loop: "{{ temp_files.results }}"
  loop_control:
    label: "{{ item.item.name }}"
  register: policy_load_results

# Looping over policy_results.results so now its item.item.item.name
# item = result of uploading
# item.item = the loop input from temp_files.results
# item.item.item = the original policy
# item.item.item.name = the actual policy name like allowed_false

- name: Display policy load results
  ansible.builtin.debug:
    msg: "{{ item.item.item.name }} policy loaded successfully"
  loop: "{{ policy_load_results.results }}"
  when: item.status == 200
